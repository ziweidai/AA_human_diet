test(10) <- 1
test[10] <- 1
test <- 0
test <- c(1,2,3,4)
test[3] <- 1
source("http://www.bioconductor.org/biocLite.R")
biocLite()
biocLite("limma")
a <- 0:100
sd(a)
demo(plotmath)
C(1,2,3)==3
c(1,2,3)==3
a <- 1:100
sd(a)
"Hello world!"
mean(1:5)
sd(1:5)
cv(1:5)
sd(1:5)/mean(1:5)
?sd
??plotting
snowball <- 1
apropos("snow")
browseVignettes()
demo(Japanese)
demo(Chinese)
example("plot")
library(DESeq2)
RSiteSearch("Random forest")
RSiteSearch("Bayesian regression")
RSiteSearch("{Bayesian regression}")
RSiteSearch("regression")
1:10+2:3
1:10+2:10
1/0
0/0
sum(1,2,3,4,5)
sum(c(1,2,3,4,5))
median(1,2,3,4,5)
median(c(1,2,3,4,5))
median(1,2)
median(1,20)
median(1:5,6:10)
help("median")
median(c(NAN,NAN,NAN),na.rm = TRUE)
median(c(0/0,0/0,0/0),na.rm = TRUE)
median(c(NA,NA,NA),na.rm = TRUE)
-2:2*-2:2
2**3
2^3
identical(1:10,1:2)
identical(1:10,1:10)
identical(0/0,NA)
identical(NA,NA)
0/0
identical(0/0,0/0)
identical(0/0,-0/0)
1:10/3
1:(10/3)
10 %% 3
10 %/% 3
1: 10/3
i
1i
exp(pi*1i)
exp(pi*1i)+1
factorial(100)
factorial(1000)
factorial(200)
factorial(140)
factorial(150)
factorial(160)
factorial(170)
factorial(180)
factorial(175)
factorial(173)
factorial(171)
sqrt(2)**2
sqrt(2)**2==2
sqrt(2)**2-2
all.equal(2,sqrt(2)**2)
all.equal(2.1,sqrt(2)**2)
help("all.equal")
c("a","b","c","d")<"C"
"aa"<"ba"
"bb"<"ac"
"bb"<"bc"
"bb"<"ca"
"bz"<"ca"
x <- 1
x
x<(-1)
x< -1
?make.names
make.names("if")
make.names(".if")
make.names(".2if")
assign(".2if",2333)
.2if
x.2if
assign("x.2if",2333)
z <- rnorm(5);z
z <- t(z)
z
(assign("z",t(z)))
assign("z",t(z))
z
identical(0/0,NaN)
0/0
1<NaN
c(Inf+1,Inf-1,Inf-Inf)
Inf**Inf
Inf**NaN
Inf**NA
NA*0
NaN*0
Inf*0
True = FALSE
True
1:10 & 1:2
1:10 & 0:1
1:10 | 0:1
!(1:10 & 0:1)
(y<-1:10 %% 2 ==0)
x=c(TRUE,FALSE,NA)
xy=expand.grid(x=x,y=x)
xy
y
help("expand.grid")
expand.grid(1:2,1:5)
expand.grid(1:2,1:5,1:3)
a=expand.grid(1:5,1:5)
a
x=3.1415926535897932384626433
all.equal(x,pi)
is.inf(NaN)
is.nan(NaN)
is.infinite(Inf)
a=1/(1:1000)
b=arctan(a)
help("Trig")
b=atan(a)
b[1]
b[1:10]
x=1:1000
y=atan(x)
z=1/tan(y)
x==z
any(x==z)
any(identical(x,z))
any(all.equal((x,z)))
any(all.equal(x,z))
all.equal(x,z)
y=atan(1/x)
z=1/tan(y)
any(all.equal(x,z))
all(all.equal(x,z))
any(x==z)
all(x==z)
sum(x==z)
sum(x!=z)
sum(x>z)
sum(x<z)
help("all.equal")
all(all.equal(x,z,tolerance=0))
all(all.equal(x,z,tolerance<-0))
all(all.equal(x,z,tolerance = 0))
all.equal(x,z,tolerance = 0)
all.equal(x,z,tolerance = 1e-8)
all.equal(x,z,tolerance = 1e-9)
true_and_missing = c(TRUE,NA)
false_and_missing = c(FALSE,NA)
mixed=c(TRUE,FALSE,NA)
any(true_and_missing)
all(true_and_missing)
any(false_and_missing)
all(false_and_missing)
any(mixed)
all(mixed)
class(mixed)
class(c(1,2,TRUE))
class(c(1,2,NA))
class(c(NA))
class(c(NaN))
typeof(c(1,2,NA))
typeof(1)
typeof(NaN)
typeof(TRUE)
class(1+1i)
typeof(1+1i)
class(1L)
class(1.1L)
class(c(1L,1.1))
class(c(1L,2L))
.Machine
class(c("alive","dead"))
(gender <- factor(c("female","male","female","male")))
class(gender)
typeof(gender)
nlevels(gender)
as.integer(gender)
gender_char <- sample(c("female","male"),10000, replace = TRUE)
gender_fac <- as.factor(gender_char)
object.size(gender_char)
object.size(gender_fac)
as.character(gender)
gender
as.raw(1:10)
as.raw(1:255)
as.raw(256)
(sushi <- charToRaw("Fish!"))
class(sushi)
met_labeled=c(2158174,3355424,3543801,2717143,3031826,3421222,2637006,2660255,3005482)
2.682883/mean(met_labeled)
a <- -10:10
a
fa <- factor(as.numeric(a < -1)-as.numeric(a > 1))
fa
factor(a,levels=c(-10:-1,-1:1,1:10))
fa2 <- factor(a,levels=c(-10:-1,-1:1,1:10))
fa2
fa <- factor((a < -1)- (a > 1))
fa
fa <- factor((a > 1) - (a < -1) + 2)
fa
a <- 1
for(i in 1:200)
a <- a/2
a
a <- 10^400
a <- 10^(-400)
a
a <- 10^(-200)
a
a <- 10^(-300)
a
a <- 10^(-350)
a
a <- 10^(-325)
a
a <- 10^(-323)
a
library(synapser)
library(synapserutils)
synLogin('synapse_username', 'password')
files <- synapserutils::syncFromSynapse('syn18089524')
install.packages(synapser)
setwd("C:/Research/Food/AnnotatedCodes/3-NHANES_Imputation/")
setwd("C:/Research/Food/AnnotatedCodes/3-NHANES_Imputation/Imputation_All_Datasets/")
ls
ls()
getwd()
source("MergeRecords.R")
nf
setwd("..")
getwd()
source("MergeRecords.R")
nf
Folders[nf]
getwd()
getwd()
setwd("..")
getwd()
source("MergeRecords.R")
getwd()
setwd("..")
source("MergeRecords.R")
getwd()
source("MergeRecords.R")
View(merged_ave12)
dim(merged_ave12)
getwd()
source("AA_Imputation.R")
dim(merged_ave12)
getwd()
source("ProcessNHANES.R")
dim(nut_norm)
View(nut_norm)
nut_norm[34000,1]
nut_norm[34000:34001,1]
nut_norm[34000:34001,1:2]
dim(seqn)
length(seqn)
dim(nut_norm)
seqn[66587]
View(nut_nonorm)
View(mat_combine)
View(cbind(seqn,mat_combine))
source("ProcessNHANES.R")
size(mat_demo)
dim(mat_demo)
DemoList
NutIDs
class(NutIDs)
typeof(NutIDs)
class(mat_combine)
View(nt)
help(replace)
help(sub)
gsub("snow","coal",c("snowball","snowwhite"))
10%3
mod(10,3)
10 %% 3
source("ProcessNHANES.R")
View(nt)
colnames(nt)
NutIDs_current
source("ProcessNHANES.R")
dim(mat_combine)
dim(mat_nt)
source("ProcessNHANES.R")
source("ProcessNHANES.R")
SharedIDs
colnames(mat_nt)
colnames(nt)
source("ProcessNHANES.R")
View(mat_combine)
source("ProcessNHANES.R")
View(mat_combine)
gsub("snow","coal",c("snowball","hippo"))
i <- 1
fn <- filenames[i]
nt <- sasxport.get(fn)
colnames(nt)
gsub("dr1","",colnames(nt))
source("ProcessNHANES.R")
source("ProcessNHANES.R")
source("ProcessNHANES.R")
source("ProcessNHANES.R")
source("ProcessNHANES.R")
warnings()
source("ProcessNHANES.R")
